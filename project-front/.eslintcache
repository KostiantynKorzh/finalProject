[{"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/auth.service.js":"1","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/admin.service.js":"2","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/user.service.js":"3","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/BoardUser.js":"4","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/store.js":"5","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Home.js":"6","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Signup.js":"7","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/index.js":"8","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/types.js":"9","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/admin.js":"10","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Login.js":"11","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/reportWebVitals.js":"12","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/utils/history.js":"13","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/App.js":"14","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/auth-header.js":"15","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/modal/CreateTestModal.js":"16","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/message.js":"17","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/admin.js":"18","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/modal/AddTestsToUsersModal.js":"19","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/auth.js":"20","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CreateTestInit.js":"21","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Test.js":"22","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/QuestionCard.js":"23","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CreateTest.js":"24","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CreateTestQuestionCard.js":"25","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/test.js":"26","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Header.js":"27","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/auth.js":"28","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/index.js":"29","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/message.js":"30","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/test.js":"31","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/test.service.js":"32","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/lang.service.js":"33","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Profile.js":"34","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CompleteTest.js":"35","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Timer.js":"36","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/AdminUsers.js":"37","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/AddTestsToUser.js":"38","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/EditUser.js":"39","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/AdminTests.js":"40","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/UserPassedTests.js":"41","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/UserRequiredTests.js":"42","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/EditTest.js":"43"},{"size":680,"mtime":1611264415706,"results":"44","hashOfConfig":"45"},{"size":2036,"mtime":1611474517820,"results":"46","hashOfConfig":"45"},{"size":1190,"mtime":1611424137464,"results":"47","hashOfConfig":"45"},{"size":3869,"mtime":1611296238827,"results":"48","hashOfConfig":"45"},{"size":257,"mtime":1610654933550,"results":"49","hashOfConfig":"45"},{"size":1008,"mtime":1611302519514,"results":"50","hashOfConfig":"45"},{"size":6533,"mtime":1611414679627,"results":"51","hashOfConfig":"45"},{"size":197,"mtime":1610753434638,"results":"52","hashOfConfig":"45"},{"size":677,"mtime":1611222596233,"results":"53","hashOfConfig":"45"},{"size":505,"mtime":1611224635040,"results":"54","hashOfConfig":"45"},{"size":2232,"mtime":1611014175994,"results":"55","hashOfConfig":"45"},{"size":362,"mtime":1610714292427,"results":"56","hashOfConfig":"45"},{"size":95,"mtime":1610734757029,"results":"57","hashOfConfig":"45"},{"size":3400,"mtime":1611475406587,"results":"58","hashOfConfig":"45"},{"size":225,"mtime":1610751848593,"results":"59","hashOfConfig":"45"},{"size":1686,"mtime":1611089944647,"results":"60","hashOfConfig":"45"},{"size":225,"mtime":1610659655905,"results":"61","hashOfConfig":"45"},{"size":1791,"mtime":1611223079075,"results":"62","hashOfConfig":"45"},{"size":2172,"mtime":1611276317272,"results":"63","hashOfConfig":"45"},{"size":1145,"mtime":1610753335310,"results":"64","hashOfConfig":"45"},{"size":3685,"mtime":1611293510205,"results":"65","hashOfConfig":"45"},{"size":4208,"mtime":1611422874495,"results":"66","hashOfConfig":"45"},{"size":2339,"mtime":1611152725190,"results":"67","hashOfConfig":"45"},{"size":1342,"mtime":1611293675518,"results":"68","hashOfConfig":"45"},{"size":5782,"mtime":1611475643185,"results":"69","hashOfConfig":"45"},{"size":517,"mtime":1611224330495,"results":"70","hashOfConfig":"45"},{"size":4490,"mtime":1611417840601,"results":"71","hashOfConfig":"45"},{"size":1994,"mtime":1611232000650,"results":"72","hashOfConfig":"45"},{"size":688,"mtime":1611302775669,"results":"73","hashOfConfig":"45"},{"size":379,"mtime":1610653647209,"results":"74","hashOfConfig":"45"},{"size":1019,"mtime":1611223079063,"results":"75","hashOfConfig":"45"},{"size":664,"mtime":1611491924246,"results":"76","hashOfConfig":"45"},{"size":684,"mtime":1611300920003,"results":"77","hashOfConfig":"45"},{"size":1202,"mtime":1611129741877,"results":"78","hashOfConfig":"45"},{"size":671,"mtime":1611475643178,"results":"79","hashOfConfig":"45"},{"size":1946,"mtime":1611305799641,"results":"80","hashOfConfig":"45"},{"size":5297,"mtime":1611493668284,"results":"81","hashOfConfig":"45"},{"size":1682,"mtime":1611286990273,"results":"82","hashOfConfig":"45"},{"size":4238,"mtime":1611498837564,"results":"83","hashOfConfig":"45"},{"size":5405,"mtime":1611493220187,"results":"84","hashOfConfig":"45"},{"size":2124,"mtime":1611300919986,"results":"85","hashOfConfig":"45"},{"size":2947,"mtime":1611416556538,"results":"86","hashOfConfig":"45"},{"size":209,"mtime":1611475469719,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"m9tu1l",{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"121"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"121"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"121"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/auth.service.js",["197"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/admin.service.js",["198"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/user.service.js",["199"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/BoardUser.js",["200","201","202","203","204","205"],"import React, {useState, useEffect} from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport {useSelector} from \"react-redux\";\nimport {Button, Modal, Table} from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport LangService from \"../services/lang.service\";\n\nconst BoardUser = (props) => {\n\n    const {user: currentUser} = useSelector((state) => state.auth);\n\n    const [content, setContent] = useState({\n        requiredTests: \"\",\n        passedTests: \"\",\n        pass: \"\",\n        take: \"\"\n    });\n\n    const [needRefresh, setNeedRefresh] = useState(false);\n\n    const [passedTests, setPassedTests] = useState([]);\n    const [requiredTests, setRequiredTests] = useState([]);\n\n    const lang = localStorage.getItem('lang');\n\n    useEffect(() => {\n        UserService.getRequiredTests(props.match.params.id).then(\n            (response) => {\n                console.log(response.data);\n                setRequiredTests(response.data);\n            });\n\n        UserService.getPassedTests(props.match.params.id).then(\n            (response) => {\n                console.log(response.data);\n                setPassedTests(response.data);\n            });\n\n        // getContent(lang);\n\n    }, []);\n\n    // React.useEffect(() => {\n    //     console.log(\"Effect\");\n    //     window.addEventListener('storage', () => {\n    //         console.log(\"Listener\");\n    //     });\n    //\n    //\n    // },[])\n\n    // useEffect(() => {\n    //     getContent(lang);\n    // }, [lang])\n\n    useEffect(() => {\n        UserService.getRequiredTests(props.match.params.id).then(\n            (response) => {\n                console.log(response.data);\n                setRequiredTests(response.data);\n            });\n\n        UserService.getPassedTests(props.match.params.id).then(\n            (response) => {\n                console.log(response.data);\n                setPassedTests(response.data);\n            });\n        // setNeedRefresh(false);\n    }, [needRefresh]);\n\n\n\n    const handlePass = (test) => {\n        UserService.passTest(props.match.params.id, test.id);\n        setNeedRefresh(true);\n        // setNeedRefresh(false);\n        // UserService.getRequiredTests(props.match.params.id).then(\n        //     (response) => {\n        //         console.log(response.data);\n        //         setRequiredTests(response.data);\n        //     });\n        //\n        // UserService.getPassedTests(props.match.params.id).then(\n        //     (response) => {\n        //         console.log(response.data);\n        //         setPassedTests(response.data);\n        //     });\n        console.log(test.id);\n    }\n\n    const handleTake = (test) => {\n        let path = `/user/${currentUser.id}/takeTest/${test.id}`;\n        props.history.push(path);\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            <Header/>\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h1>{content.requiredTests}</h1>\n                    <Table>\n                        <tbody>\n                        {requiredTests.map(test =>\n                            <tr>\n                                <td>\n                                    <div>{test.title}</div>\n                                </td>\n                                <td><Button onClick={() => handleTake(test)}>{content.take}</Button></td>\n                                <td><Button onClick={() => handlePass(test)}>{content.pass}</Button></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </Table>\n                    <h1>{content.passedTests}</h1>\n                    <h3>{passedTests.map(test =>\n                        <div>{test.title}</div>\n                    )}</h3>\n                </header>\n            </div>\n        </div>\n    );\n};\nexport default BoardUser;",["206","207"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/store.js",[],["208","209"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Home.js",["210","211","212"],"import React, {useEffect, useState} from 'react';\nimport Header from \"./Header\";\nimport UserService from \"../services/user.service\";\nimport Timer from \"./Timer\";\n\nconst Home = () => {\n\n    const [content, setContent] = useState(\"\");\n\n    const lang = (localStorage.getItem(\"lang\"));\n    const user = (localStorage.getItem(\"user\"));\n\n    useEffect(() => {\n        UserService.getPublicContent().then(\n            response => {\n                setContent(response.data);\n            },\n            error => {\n                const _content =\n                    (error.response && error.response.data) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content[0]);\n            }\n        )\n        console.log(user);\n    }, [])\n\n    return (\n        <div>\n            <Header/>\n            <h2>Home Page</h2>\n            <h2>{content}</h2>\n            <h2>{content}</h2>\n            {/*<Timer time={67}/>*/}\n        </div>\n    );\n\n}\n\nexport default Home;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Signup.js",["213","214","215","216"],"import React, {useEffect, useRef, useState} from 'react';\nimport {Jumbotron, Button, Form} from \"react-bootstrap\";\nimport {register} from \"../redux/actions/auth\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport validator from \"validator\";\nimport {setMessage} from \"../redux/actions/message\";\nimport Header from \"./Header\";\n\nconst Signup = (props) => {\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [successful, setSuccessful] = useState(true);\n\n    const [firstNameError, setFirstNameError] = useState(\"\");\n    const [lastNameError, setLastFirstNameError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const [isValidated, setValidated] = useState(false);\n\n    const {message} = useSelector(state => state.message);\n\n    const dispatch = useDispatch();\n\n    const initialRender = useRef(true);\n\n    useEffect(() => {\n        if (!initialRender.current) {\n            if (successful) {\n                window.alert(message);\n                props.history.push('/login');\n                window.location.reload();\n            } else {\n                setEmailError(message);\n            }\n        }\n        initialRender.current = false;\n    }, [errorMessage, message, successful])\n\n    const onChangeFirstName = (e) => {\n        const firstName = e.target.value;\n        setFirstName(firstName);\n    };\n\n    const onChangeLastName = (e) => {\n        const lastName = e.target.value;\n        setLastName(lastName);\n    };\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n\n    const validate = (firstName, lastName, email, password) => {\n        let containsProblem = true;\n        if (!validator.isAlpha(firstName)) {\n            setFirstNameError(\"Invalid first name\");\n            containsProblem = false;\n        } else {\n            setFirstNameError(null);\n        }\n        if (!validator.isAlpha(lastName)) {\n            setLastFirstNameError(\"Invalid last name\");\n            containsProblem = false;\n        } else {\n            setLastFirstNameError(null);\n        }\n        if (!validator.isEmail(email)) {\n            setEmailError(\"Invalid email\");\n            containsProblem = false;\n        } else {\n            setEmailError(null);\n        }\n        if (password.length < 8) {\n            setPasswordError(\"Password should contains at least 8 characters\");\n            containsProblem = false;\n        } else {\n            setPasswordError(null);\n        }\n        return containsProblem;\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        setSuccessful(false);\n\n        if (validate(firstName, lastName, email, password)) {\n            dispatch(register(firstName, lastName, email, password)).then(() => {\n                    setSuccessful(true);\n                }\n            )\n                .catch((error) => {\n                    // console.log(\"message: \", message)\n                    setErrorMessage(error)\n                    // window.alert(error);\n                    // console.log(\"error: \", error)\n                    setSuccessful(false);\n                });\n        }\n\n    };\n\n\n    return (\n        <div>\n            <Header/>\n            <Jumbotron>\n                <Form>\n                    <Form.Group controlId=\"formFirstName\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"firstName\" placeholder=\"First Name\"\n                                      onChange={onChangeFirstName}\n                                      isInvalid={!!firstNameError}\n                        />\n                        {firstNameError && (\n                            <Form.Control.Feedback type=\"invalid\">\n                                {firstNameError}\n                            </Form.Control.Feedback>\n                        )}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formLastName\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control type=\"text\" name=\"lastName\" placeholder=\"Last Name\"\n                                      onChange={onChangeLastName}\n                                      isInvalid={!!lastNameError}\n                        />\n                        {lastNameError && (\n                            <Form.Control.Feedback type=\"invalid\">\n                                {lastNameError}\n                            </Form.Control.Feedback>\n                        )}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"\n                                      onChange={onChangeEmail}\n                                      isInvalid={!!emailError}\n                        />\n                        {emailError && (\n                            <Form.Control.Feedback type=\"invalid\">\n                                {emailError}\n                            </Form.Control.Feedback>\n                        )}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"\n                                      isInvalid={!!passwordError}\n                                      onChange={onChangePassword}/>\n                        <Form.Control.Feedback type=\"invalid\"/>\n                        {passwordError && (\n                            <Form.Control.Feedback type=\"invalid\">\n                                {passwordError}\n                            </Form.Control.Feedback>\n                        )}\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\"\n                            onClick={handleRegister}\n                    >\n                        Register\n                    </Button>\n                </Form>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default Signup;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/index.js",[],["217","218"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/types.js",[],["219","220"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/admin.js",["221"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Login.js",["222","223","224","225","226"],"import React, {useRef, useState} from 'react';\nimport {Button, Container, Form} from \"react-bootstrap\";\nimport {Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login} from \"../redux/actions/auth\";\n\nconst Login = (props) => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const {isLoggedIn} = useSelector(state => state.auth);\n    const {message} = useSelector(state => state.message);\n\n    const dispatch = useDispatch();\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        // form.current.validateAll();\n\n        // if (checkBtn.current.context._errors.length === 0) {\n        dispatch(login(email, password))\n            .then(() => {\n                props.history.push(\"/home\");\n                window.location.reload();\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n        // } else {\n        //     setLoading(false);\n        // }\n    };\n\n    // if (isLoggedIn) {\n    //     return <Redirect to=\"/home\"/>\n    // }\n\n    return (\n        <Container>\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\"\n                                  onChange={onChangeEmail}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\"\n                                  onChange={onChangePassword}/>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\"\n                        onClick={handleLogin}>\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    );\n}\n\nexport default Login;",["227","228"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/reportWebVitals.js",[],["229","230"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/utils/history.js",[],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/App.js",["231","232","233","234","235","236"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/auth-header.js",[],["237","238"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/modal/CreateTestModal.js",["239","240"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/message.js",[],["241","242"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/admin.js",["243","244"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/modal/AddTestsToUsersModal.js",["245","246"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/auth.js",["247"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CreateTestInit.js",["248"],"import React, {useEffect, useState} from \"react\";\nimport {Jumbotron, Button, Form} from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport AdminService from \"../services/admin.service\";\nimport {useSelector} from \"react-redux\";\n\nconst CreateTestInit = (props) => {\n\n    const [newTest, setNewTest] = useState({\n        title: \"\",\n        subject: \"MATH\",\n        difficulty: \"EASY\",\n        duration: 0\n    });\n\n    const [title, setTitle] = useState(\"\");\n    const [subject, setSubject] = useState(\"MATH\");\n    const [difficulty, setDifficulty] = useState(\"EASY\");\n    const [duration, setDuration] = useState(\"\");\n\n    useEffect(() => {\n        setNewTest({\n            title: title,\n            subject: subject,\n            difficulty: difficulty,\n            duration: duration,\n        });\n    }, [title, subject, difficulty, duration]);\n\n    const handleSubmit = () => {\n        console.log(newTest);\n\n        AdminService.createTest(newTest).then(\n            resp => {\n                console.log(resp.data);\n                props.history.push(\"/admin/createTest/\" + resp.data.id);\n                window.location.reload();\n            }\n        );\n\n\n    }\n\n    return (\n        <div>\n            <Header/>\n            <Jumbotron>\n                <Form>\n                    <Form.Group controlId=\"formTestTitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"testTitle\"\n                                      onChange={(e) =>\n                                          setTitle(e.target.value)}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formTestSubject\">\n                        <Form.Label>Subject</Form.Label>\n                        <Form.Control as=\"select\" type=\"text\" name=\"testSubject\"\n                                      onChange={(e) => {\n                                          console.log(e.target.value);\n\n                                          setSubject(e.target.value)\n                                      }}\n                                      defaultValue=\"MATH\"\n                        >\n                            <option value=\"MATH\">MATH</option>\n                            <option value=\"ENGLISH\">ENGLISH</option>\n                        </Form.Control>\n                        <Form.Group controlId=\"formTestDifficulty\">\n                            <Form.Label>Difficulty</Form.Label>\n                            <Form.Control as=\"select\" type=\"text\" name=\"testDifficulty\"\n                                          onChange={(e) => {\n                                              console.log(e.target.value);\n                                              setDifficulty(e.target.value);\n                                          }}\n                                          defaultValue=\"EASY\"\n                            >\n                                <option value=\"EASY\">EASY</option>\n                                <option value=\"MEDIUM\">MEDIUM</option>\n                                <option value=\"HARD\">HARD</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form.Group>\n                    <Form.Label>Duration</Form.Label>\n                    <Form.Control type=\"text\" name=\"testTime\"\n                                  onChange={(e) =>\n                                      setDuration(e.target.value)}/>\n                </Form>\n                <Button variant=\"primary\"\n                        onClick={() => handleSubmit()}>\n                    Submit\n                </Button>\n            </Jumbotron>\n        </div>\n    );\n};\n\nexport default CreateTestInit;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Test.js",["249","250","251","252","253","254","255","256","257","258"],"import React, {useEffect, useState} from 'react';\nimport UserService from \"../services/user.service\";\nimport axios from \"axios\";\nimport authHeader from \"../services/auth-header\";\nimport QuestionCard from \"./QuestionCard\";\nimport {Button} from \"react-bootstrap\";\nimport equals from \"validator/es/lib/equals\";\nimport CompleteTest from \"./CompleteTest\";\nimport Header from \"./Header\";\nimport Timer from \"./Timer\";\n\nconst Test = (props) => {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    const [checkedAnswers, setCheckedAnswers] = useState(new Set());\n\n    const [results, setResults] = useState([]);\n\n    const [completed, setCompleted] = useState(false);\n    const [submitted, setSubmitted] = useState(false);\n\n    const [score, setScore] = useState(-30);\n\n    const [test, setTest] = useState({\n        title: \"\",\n        subject: \"\",\n        difficulty: \"\",\n        questions: [],\n        duration: -1\n    });\n\n    // const receiveResult = (value) => {\n    //     console.log(value);\n    // }\n\n    const handleChangeInCard = (questionId, e, correctAnswer) => {\n        const ansObj = {\n            questionId: questionId,\n            chosenAnswerId: e.target.id,\n            correctAnswerId: correctAnswer\n        }\n\n        const duplicateIndex = results.findIndex(obj => obj.questionId == ansObj.questionId);\n        if (duplicateIndex >= 0) {\n            setResults(prev => {\n                const newArray = prev.slice(0, duplicateIndex)\n                    .concat(prev.slice(duplicateIndex + 1));\n                return [...newArray, ansObj];\n            })\n        } else {\n            setResults(prev => [...prev, ansObj]);\n        }\n\n\n    }\n\n    useEffect(() => {\n        if (submitted) {\n            console.log(percentage);\n            if (percentage <= -20) {\n                percentage = 0;\n            }\n            setScore(percentage);\n        }\n    }, [submitted])\n\n    let scoreTemp = 0;\n    let percentage = -20;\n\n    const handleSubmitTest = () => {\n\n        setSubmitted(true);\n\n        results.map(ansObj => {\n            if (ansObj.chosenAnswerId == ansObj.correctAnswerId) {\n                scoreTemp++;\n            }\n        });\n\n        setCompleted(true);\n\n        percentage = scoreTemp / results.length * 100;\n        console.log(\"temp\", scoreTemp);\n        console.log(\"p\", percentage)\n        setScore(percentage);\n    }\n\n    useEffect(() => {\n        UserService.getTest(user.id, props.match.params.testId).then(\n            resp => {\n                setTest({\n                    title: resp.data.title,\n                    subject: resp.data.subject,\n                    difficulty: resp.data.difficulty,\n                    questions: resp.data.questions,\n                    duration: resp.data.duration\n                });\n            }\n        );\n\n    }, [])\n\n    let count = 0;\n\n    return (\n        <div>\n            {completed &&\n            <Header/>\n            }\n            <div>TEST</div>\n            <div>{test.title}</div>\n            {!completed &&\n            test.questions.map(question => {\n                count++;\n                return (\n                    <QuestionCard props={{\n                        questionId: question.id,\n                        numberOfQuestion: count,\n                        questionText: question.questionText,\n                        answers: question.answers,\n                        handleChangeInCard: handleChangeInCard\n                    }}/>);\n            })}\n            {/*{!completed &&*/}\n            <Button onClick={handleSubmitTest}>Submit</Button>\n            {/*}*/}\n            {score >= 0 &&\n            <CompleteTest props={{\n                score: score,\n                userId: user.id,\n                testId: props.match.params.testId\n            }}\n            />\n            }\n            <div style={{\n                position: \"absolute\",\n                left: \"0\",\n                bottom: \"0\",\n                right: \"0\"\n            }}>\n                {!submitted && test.duration > 0 &&\n                <Timer\n                    time={test.duration}\n                    props={props}\n                />}\n            </div>\n        </div>\n    );\n\n};\n\nexport default Test;\n\n","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/QuestionCard.js",["259","260","261","262","263","264","265","266","267"],"import React, {useState} from \"react\";\nimport {Button, Form, Card, FormControl, InputGroup, ListGroup} from \"react-bootstrap\";\n\nconst QuestionCard = ({props}) => {\n\n    const [chosenAnswerId, setChosenAnswerId] = useState(0);\n\n    const handleSubmitQuestion = () => {\n        console.log(props.answers.find(answer => answer.correct).id == chosenAnswerId);\n    }\n\n    const handleSubmitTest = () => {\n        console.log(props.answers.find(answer => answer.correct).id == chosenAnswerId);\n    }\n\n    const handleChange = (e) => {\n        setChosenAnswerId(e.target.id);\n        console.log(e.target.id);\n    }\n\n    return (\n        <div>\n            <Card>\n                <Card.Header>\n                    {props.numberOfQuestion}\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>{props.questionText}</Card.Title>\n                    {/*<Card.Title>title</Card.Title>*/}\n                    <Card.Body>\n                        <Form>\n                            <Form.Group>\n                                {props.answers.map(answer => {\n                                    return (\n                                        <div key={answer.id}>\n                                            <Form.Check\n                                                type=\"radio\"\n                                                label={answer.answerText}\n                                                name=\"1\"\n                                                id={answer.id}\n                                                onChange={(e) =>\n                                                    props.handleChangeInCard(props.questionId, e,\n                                                        props.answers.find(answer => answer.correct).id)}\n                                            />\n                                        </div>\n                                    );\n                                })}\n                            </Form.Group>\n                            {/*<Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback>*/}\n                        </Form>\n                    </Card.Body>\n                </Card.Body>\n            </Card>\n            {/*<Button onClick={() => props.handleSubmit}>Submit question</Button>*/}\n        </div>\n    );\n\n};\n\nexport default QuestionCard;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CreateTest.js",["268","269","270"],"import React, {useEffect, useState} from \"react\";\nimport AdminService from \"../services/admin.service\";\nimport {Jumbotron, Card, Form} from \"react-bootstrap\";\nimport CreateTestQuestionCard from \"./CreateTestQuestionCard\";\nimport Header from \"./Header\";\n\nconst CreateTest = (props) => {\n\n    const [testId, setTestId] = useState(0);\n\n    const [testToFill, setTestToFill] = useState({\n        title: \"\",\n        subject: \"\",\n        difficulty: \"\"\n    });\n\n    useEffect(() => {\n        AdminService.getTest(props.match.params.id).then(\n            resp => {\n                setTestToFill({\n                    title: resp.data.title,\n                    subject: resp.data.subject,\n                    difficulty: resp.data.difficulty,\n                    duration: resp.data.duration\n                })\n                setTestId(props.match.params.id);\n            }\n        );\n    }, []);\n\n    return (\n        <div>\n            <Header/>\n            <Jumbotron>\n                <h1>{testToFill.title}</h1>\n                <h3>Subject: {testToFill.subject}</h3>\n                <h3>Difficulty: {testToFill.difficulty}</h3>\n                <h3>Duration: {testToFill.duration}</h3>\n                <CreateTestQuestionCard testId={testId} history={props.history}/>\n            </Jumbotron>\n        </div>\n    );\n\n};\n\nexport default CreateTest;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CreateTestQuestionCard.js",["271","272","273","274","275","276","277","278"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/test.js",["279"],"import {GET_ALL_USERS_FAIL, GET_AVAILABLE_TESTS_SUCCESS} from \"../actions/types\";\n\n\nconst initialState = {\n    tests: []\n}\n\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n        case GET_AVAILABLE_TESTS_SUCCESS:\n            return {\n                ...state,\n                tests: payload\n            }\n        case GET_ALL_USERS_FAIL:\n            return {\n                ...state\n            };\n        default:\n            return state;\n    }\n}","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Header.js",["280","281","282","283"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Nav,\n    NavDropdown,\n    Button, Form,\n    FormControl,\n    Navbar\n} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../redux/actions/auth\";\nimport LangService from \"../services/lang.service\";\n\n\nconst Header = (props) => {\n\n    const {user: currentUser} = useSelector((state) => state.auth);\n\n    // const [langTemp, setLangTemp] = useState(\"\");\n\n    const lang = localStorage.getItem('lang');\n\n    const [content, setContent] = useState({\n        home: \"\",\n        profile: \"\",\n        users: \"\",\n        tests: \"\",\n        allTests: \"\",\n        createTest: \"\",\n        user: \"\",\n        logout: \"\",\n        lang: \"\",\n        login: \"\",\n        signup: \"\",\n        passedTests: \"\",\n        requiredTests: \"\"\n    });\n\n    // useEffect(() => {\n    //     getContentLang(lang);\n    //     console.log(\"Here\")\n    // }, [langTemp]);\n\n    useEffect(() => {\n        getContentLang(lang);\n    }, []);\n\n    const getContentLang = (lang) => {\n        LangService.getContentHeader(lang).then(\n            resp => {\n                setContent({\n                    home: resp.data.home,\n                    profile: resp.data.profile,\n                    users: resp.data.users,\n                    tests: resp.data.tests,\n                    allTests: resp.data.allTests,\n                    createTest: resp.data.createTest,\n                    user: resp.data.user,\n                    logout: resp.data.logout,\n                    lang: resp.data.lang,\n                    login: resp.data.login,\n                    signup: resp.data.signup,\n                    passedTests: resp.data.passedTests,\n                    requiredTests: resp.data.requiredTests\n                });\n            }\n        );\n    };\n\n    const dispatch = useDispatch();\n\n    const logOut = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/home\">{content.home}</Nav.Link>\n                    {currentUser && currentUser.roles.includes(\"ROLE_ADMIN\") &&\n                    <Nav.Link href=\"/admin/users\">{content.users}</Nav.Link>}\n                    {currentUser && currentUser.roles.includes(\"ROLE_ADMIN\") &&\n                    <NavDropdown title={content.tests} id=\"tests-dropdown\">\n                        <NavDropdown.Item href=\"/admin/tests\">{content.allTests}</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/admin/createTest\">{content.createTest}</NavDropdown.Item>\n                    </NavDropdown>\n                    }\n                    {currentUser && !currentUser.roles.includes(\"ROLE_ADMIN\") &&\n                    <NavDropdown title={content.tests} id=\"tests-dropdown\">\n                        <NavDropdown.Item\n                            href={\"/user/\" + currentUser.id + \"/passedTests\"}>{content.passedTests}</NavDropdown.Item>\n                        <NavDropdown.Item\n                            href={\"/user/\" + currentUser.id + \"/requiredTests\"}>{content.requiredTests}</NavDropdown.Item>\n                    </NavDropdown>}\n                    {currentUser && <Nav.Link href=\"/profile\">{content.profile}</Nav.Link>}\n                    {currentUser && <Nav.Link href=\"/home\" onClick={logOut}>{content.logout}</Nav.Link>}\n                    {!currentUser && <Nav.Link href=\"/login\">{content.login}</Nav.Link>}\n                    {!currentUser && <Nav.Link href=\"/signup\">{content.signup}</Nav.Link>}\n                </Nav>\n                <NavDropdown title={content.lang} id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item onClick={() => {\n                        getContentLang(\"en\");\n                        localStorage.setItem(\"lang\", \"en\");\n                        // props.setLang(\"en\");\n                        window.location.reload();\n                    }}>EN</NavDropdown.Item>\n                    <NavDropdown.Item onClick={() => {\n                        getContentLang(\"ua\");\n                        localStorage.setItem(\"lang\", \"ua\");\n                        // props.setLang(\"ua\");\n                        window.location.reload();\n                    }}>UA</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\nexport default Header;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/auth.js",[],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/index.js",[],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/reducers/message.js",["284"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/redux/actions/test.js",[],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/test.service.js",["285"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/services/lang.service.js",["286","287","288"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Profile.js",[],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/CompleteTest.js",["289","290"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/Timer.js",["291","292","293","294","295","296"],"import React, {useEffect, useState} from \"react\";\nimport {ListGroup, Navbar, Form, Col, ProgressBar} from \"react-bootstrap\";\n\nconst Timer = (props) => {\n\n        const [seconds, setSeconds] = useState(0);\n        const [minutes, setMinutes] = useState(0);\n\n        const [secondsToShow, setSecondsToShow] = useState(0);\n\n        const [progress, setProgress] = useState(0);\n\n        const [over, setOver] = useState(false);\n\n        const time = props.time;\n\n        useEffect(() => {\n            setSeconds(time);\n        }, []);\n\n        useEffect(() => {\n            setProgress((time - seconds) / time * 100);\n            if (seconds >= 0) {\n                const t = setTimeout(() => {\n                    setSeconds(seconds => seconds - 1);\n                    showTime(seconds);\n                }, 1000);\n                return () => {\n                    clearTimeout(t);\n                };\n            } else {\n                setOver(true);\n            };\n\n\n        }, [seconds])\n\n        useEffect(() => {\n            if (over) {\n                window.alert(\"Time is up\");\n                console.log(props);\n                props.props.history.push('/home');\n                window.location.reload();\n            }\n        }, [over])\n\n        const showTime = (seconds) => {\n            let minutesTemp = 0;\n            setMinutes(0);\n            if (seconds >= 60) {\n                minutesTemp = Math.floor(seconds / 60);\n                setMinutes(minutesTemp);\n            }\n            setSecondsToShow(seconds - minutesTemp * 60);\n        }\n\n        return (\n            <div>\n                {/*<div>{seconds}</div>*/}\n                <ListGroup horizontal>\n                    <ListGroup.Item>{minutes}</ListGroup.Item>\n                    <ListGroup.Item>{secondsToShow}</ListGroup.Item>\n                </ListGroup>\n                <ProgressBar now={progress}/>\n            </div>\n        );\n\n    }\n;\n\nexport default Timer;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/AdminUsers.js",["297","298","299","300"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/AddTestsToUser.js",["301","302"],"import React, {useEffect, useState} from \"react\";\nimport AdminService from \"../services/admin.service\";\nimport {Jumbotron, Button, Table} from \"react-bootstrap\";\nimport Header from \"./Header\";\n\nconst AddTestsToUser = (props) => {\n\n    const [tests, setTests] = useState([]);\n\n    const [added, setAdded] = useState(false);\n\n    useEffect(() => {\n        getTests();\n    }, []);\n\n    useEffect(()=>{\n        getTests();\n    },[added]);\n\n    const getTests = () => {\n        AdminService.getAvailableTests(props.match.params.id).then(\n            resp => {\n                console.log(resp.data);\n                setTests(resp.data)\n            });\n        setAdded(false);\n    };\n\n    const handleAddOneTest = (e, testId) => {\n        AdminService.addOneTestToUser(props.match.params.id, testId);\n        setAdded(true)\n        getTests();\n    }\n\n    return (\n        <div>\n            <Header/>\n            <Jumbotron>\n                <Table>\n                    <tbody>\n                    {tests.map(test => (\n                            <tr>\n                                <td>{test.title}</td>\n                                <td>{test.subject}</td>\n                                <td>{test.difficulty}</td>\n                                <td>{test.duration}</td>\n                                <td>\n                                    <Button type=\"submit\" onClick={(e) => handleAddOneTest(e, test.id)}>ADD</Button>\n                                </td>\n                            </tr>\n                        )\n                    )}\n                    </tbody>\n                </Table>\n            </Jumbotron>\n        </div>\n    );\n\n};\n\nexport default AddTestsToUser;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/EditUser.js",["303"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/AdminTests.js",["304","305","306","307","308"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/UserPassedTests.js",["309","310","311","312","313"],"import React, {useEffect, useState} from \"react\";\nimport Header from \"./Header\";\nimport {Button, Jumbotron, Table} from \"react-bootstrap\";\nimport LangService from \"../services/lang.service\";\nimport {useSelector} from \"react-redux\";\nimport UserService from \"../services/user.service\";\n\nconst UserPassedTests = (props) => {\n\n    const lang = localStorage.getItem('lang');\n\n    const [needRefresh, setNeedRefresh] = useState(false);\n    const [passedTests, setPassedTests] = useState([]);\n    const [content, setContent] = useState({\n        passedTests: \"\",\n    });\n\n    useEffect(() => {\n        UserService.getPassedTests(props.match.params.id).then(\n            (response) => {\n                setPassedTests(response.data);\n            });\n        getContent();\n    }, []);\n\n    useEffect(() => {\n        getContent(lang);\n    }, [lang])\n\n    useEffect(() => {\n        UserService.getPassedTests(props.match.params.id).then(\n            (response) => {\n                setPassedTests(response.data);\n            });\n        // setNeedRefresh(false);\n    }, [needRefresh]);\n\n    const getContent = (lang) => {\n        LangService.getContentUserPassedTests(lang).then(\n            resp => {\n                setContent({\n                    passedTests: resp.data.passedTests,\n                });\n            });\n    };\n\n\n    return (\n        <div>\n            <Header/>\n            <Jumbotron>\n                <h1>{content.passedTests}</h1>\n                <Table>\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Result</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {passedTests.map(test =>\n                        <tr>\n                            <td>\n                                <div>{test.title}</div>\n                                <div>{test.result}</div>\n                            </td>\n                        </tr>\n                    )}\n                    </tbody>\n                </Table>\n            </Jumbotron>\n        </div>\n    );\n\n};\n\nexport default UserPassedTests;",["314","315"],"/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/UserRequiredTests.js",["316","317","318","319","320","321"],"import React, {useEffect, useState} from \"react\";\nimport Header from \"./Header\";\nimport {Button, Jumbotron, Table} from \"react-bootstrap\";\nimport UserService from \"../services/user.service\";\nimport LangService from \"../services/lang.service\";\n\nconst UserRequiredTests = (props) => {\n\n    const lang = localStorage.getItem('lang');\n\n    const [needRefresh, setNeedRefresh] = useState(false);\n    const [requiredTests, setRequiredTests] = useState([]);\n    const [content, setContent] = useState({\n        passedTests: \"\",\n    });\n\n    useEffect(() => {\n        UserService.getRequiredTests(props.match.params.id).then(\n            (response) => {\n                setRequiredTests(response.data);\n            });\n    }, []);\n\n\n    useEffect(() => {\n        UserService.getRequiredTests(props.match.params.id).then(\n            (response) => {\n                setRequiredTests(response.data);\n            });\n    }, [needRefresh]);\n\n    const handleTake = (test) => {\n        let path = `/user/takeTest/${test.id}`;\n        props.history.push(path);\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            <Header/>\n            <Jumbotron>\n                {/*<h1>{content.passedTests}</h1>*/}\n                <h1>Required Tests</h1>\n                <Table>\n                    <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Subject</th>\n                        <th>Difficulty</th>\n                        <th>Duration</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {requiredTests.map(test =>\n                        <tr>\n                            <td>\n                                {test.title}\n                            </td>\n                            <td>\n                                {test.subject}\n                            </td>\n                            <td>\n                                {test.difficulty}\n                            </td>\n                            <td>\n                                {test.duration}\n                            </td>\n                            <td>\n                                <Button\n                                    onClick={() => handleTake(test)}\n                                >Take</Button>\n                            </td>\n                            <td>\n                                <Button\n                                    onClick={() => {\n                                        UserService.passTest(props.match.params.id, test.id).then(\n                                            () => setNeedRefresh(true));\n                                    }}\n                                >Pass</Button>\n                            </td>\n                        </tr>\n                    )}\n                    </tbody>\n                </Table>\n            </Jumbotron>\n        </div>\n    );\n\n};\n\nexport default UserRequiredTests;","/Users/kampuxter/Desktop/EPAM/JAVA/Project/SpringProject/project-front/src/component/EditTest.js",[],{"ruleId":"322","severity":1,"message":"323","line":31,"column":1,"nodeType":"324","endLine":35,"endColumn":2},{"ruleId":"322","severity":1,"message":"323","line":64,"column":1,"nodeType":"324","endLine":76,"endColumn":3},{"ruleId":"322","severity":1,"message":"323","line":39,"column":1,"nodeType":"324","endLine":47,"endColumn":2},{"ruleId":"325","severity":1,"message":"326","line":5,"column":17,"nodeType":"327","messageId":"328","endLine":5,"endColumn":22},{"ruleId":"325","severity":1,"message":"329","line":7,"column":8,"nodeType":"327","messageId":"328","endLine":7,"endColumn":19},{"ruleId":"325","severity":1,"message":"330","line":13,"column":21,"nodeType":"327","messageId":"328","endLine":13,"endColumn":31},{"ruleId":"325","severity":1,"message":"331","line":25,"column":11,"nodeType":"327","messageId":"328","endLine":25,"endColumn":15},{"ruleId":"332","severity":1,"message":"333","line":42,"column":8,"nodeType":"334","endLine":42,"endColumn":10,"suggestions":"335"},{"ruleId":"332","severity":1,"message":"333","line":70,"column":8,"nodeType":"334","endLine":70,"endColumn":21,"suggestions":"336"},{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"337","replacedBy":"341"},{"ruleId":"339","replacedBy":"342"},{"ruleId":"325","severity":1,"message":"343","line":4,"column":8,"nodeType":"327","messageId":"328","endLine":4,"endColumn":13},{"ruleId":"325","severity":1,"message":"331","line":10,"column":11,"nodeType":"327","messageId":"328","endLine":10,"endColumn":15},{"ruleId":"332","severity":1,"message":"344","line":28,"column":8,"nodeType":"334","endLine":28,"endColumn":10,"suggestions":"345"},{"ruleId":"325","severity":1,"message":"346","line":6,"column":9,"nodeType":"327","messageId":"328","endLine":6,"endColumn":19},{"ruleId":"325","severity":1,"message":"347","line":24,"column":12,"nodeType":"327","messageId":"328","endLine":24,"endColumn":23},{"ruleId":"325","severity":1,"message":"348","line":24,"column":25,"nodeType":"327","messageId":"328","endLine":24,"endColumn":37},{"ruleId":"332","severity":1,"message":"349","line":43,"column":8,"nodeType":"334","endLine":43,"endColumn":43,"suggestions":"350"},{"ruleId":"337","replacedBy":"351"},{"ruleId":"339","replacedBy":"352"},{"ruleId":"337","replacedBy":"353"},{"ruleId":"339","replacedBy":"354"},{"ruleId":"322","severity":1,"message":"355","line":7,"column":1,"nodeType":"324","endLine":24,"endColumn":2},{"ruleId":"325","severity":1,"message":"356","line":1,"column":16,"nodeType":"327","messageId":"328","endLine":1,"endColumn":22},{"ruleId":"325","severity":1,"message":"357","line":3,"column":9,"nodeType":"327","messageId":"328","endLine":3,"endColumn":17},{"ruleId":"325","severity":1,"message":"358","line":11,"column":12,"nodeType":"327","messageId":"328","endLine":11,"endColumn":19},{"ruleId":"325","severity":1,"message":"359","line":13,"column":12,"nodeType":"327","messageId":"328","endLine":13,"endColumn":22},{"ruleId":"325","severity":1,"message":"360","line":14,"column":12,"nodeType":"327","messageId":"328","endLine":14,"endColumn":19},{"ruleId":"337","replacedBy":"361"},{"ruleId":"339","replacedBy":"362"},{"ruleId":"337","replacedBy":"363"},{"ruleId":"339","replacedBy":"364"},{"ruleId":"325","severity":1,"message":"365","line":3,"column":8,"nodeType":"327","messageId":"328","endLine":3,"endColumn":14},{"ruleId":"325","severity":1,"message":"366","line":5,"column":32,"nodeType":"327","messageId":"328","endLine":5,"endColumn":45},{"ruleId":"325","severity":1,"message":"367","line":10,"column":8,"nodeType":"327","messageId":"328","endLine":10,"endColumn":17},{"ruleId":"325","severity":1,"message":"368","line":12,"column":9,"nodeType":"327","messageId":"328","endLine":12,"endColumn":15},{"ruleId":"325","severity":1,"message":"369","line":27,"column":12,"nodeType":"327","messageId":"328","endLine":27,"endColumn":26},{"ruleId":"325","severity":1,"message":"370","line":44,"column":18,"nodeType":"327","messageId":"328","endLine":44,"endColumn":25},{"ruleId":"337","replacedBy":"371"},{"ruleId":"339","replacedBy":"372"},{"ruleId":"325","severity":1,"message":"373","line":6,"column":12,"nodeType":"327","messageId":"328","endLine":6,"endColumn":26},{"ruleId":"332","severity":1,"message":"374","line":11,"column":8,"nodeType":"334","endLine":11,"endColumn":10,"suggestions":"375"},{"ruleId":"337","replacedBy":"376"},{"ruleId":"339","replacedBy":"377"},{"ruleId":"325","severity":1,"message":"378","line":4,"column":28,"nodeType":"327","messageId":"328","endLine":4,"endColumn":52},{"ruleId":"325","severity":1,"message":"379","line":5,"column":5,"nodeType":"327","messageId":"328","endLine":5,"endColumn":32},{"ruleId":"332","severity":1,"message":"380","line":11,"column":5,"nodeType":"327","endLine":11,"endColumn":14,"suggestions":"381"},{"ruleId":"325","severity":1,"message":"382","line":24,"column":23,"nodeType":"327","messageId":"328","endLine":24,"endColumn":31},{"ruleId":"322","severity":1,"message":"355","line":15,"column":1,"nodeType":"324","endLine":50,"endColumn":2},{"ruleId":"325","severity":1,"message":"383","line":5,"column":9,"nodeType":"327","messageId":"328","endLine":5,"endColumn":20},{"ruleId":"325","severity":1,"message":"384","line":3,"column":8,"nodeType":"327","messageId":"328","endLine":3,"endColumn":13},{"ruleId":"325","severity":1,"message":"385","line":4,"column":8,"nodeType":"327","messageId":"328","endLine":4,"endColumn":18},{"ruleId":"325","severity":1,"message":"386","line":7,"column":8,"nodeType":"327","messageId":"328","endLine":7,"endColumn":14},{"ruleId":"325","severity":1,"message":"387","line":16,"column":12,"nodeType":"327","messageId":"328","endLine":16,"endColumn":26},{"ruleId":"325","severity":1,"message":"388","line":16,"column":28,"nodeType":"327","messageId":"328","endLine":16,"endColumn":45},{"ruleId":"389","severity":1,"message":"390","line":44,"column":72,"nodeType":"391","messageId":"392","endLine":44,"endColumn":74},{"ruleId":"332","severity":1,"message":"393","line":62,"column":30,"nodeType":"394","endLine":62,"endColumn":31},{"ruleId":"395","severity":1,"message":"396","line":75,"column":28,"nodeType":"397","messageId":"398","endLine":75,"endColumn":30},{"ruleId":"389","severity":1,"message":"390","line":76,"column":39,"nodeType":"391","messageId":"392","endLine":76,"endColumn":41},{"ruleId":"332","severity":1,"message":"399","line":102,"column":8,"nodeType":"334","endLine":102,"endColumn":10,"suggestions":"400"},{"ruleId":"325","severity":1,"message":"401","line":2,"column":9,"nodeType":"327","messageId":"328","endLine":2,"endColumn":15},{"ruleId":"325","severity":1,"message":"402","line":2,"column":29,"nodeType":"327","messageId":"328","endLine":2,"endColumn":40},{"ruleId":"325","severity":1,"message":"403","line":2,"column":42,"nodeType":"327","messageId":"328","endLine":2,"endColumn":52},{"ruleId":"325","severity":1,"message":"404","line":2,"column":54,"nodeType":"327","messageId":"328","endLine":2,"endColumn":63},{"ruleId":"325","severity":1,"message":"405","line":8,"column":11,"nodeType":"327","messageId":"328","endLine":8,"endColumn":31},{"ruleId":"389","severity":1,"message":"390","line":9,"column":69,"nodeType":"391","messageId":"392","endLine":9,"endColumn":71},{"ruleId":"325","severity":1,"message":"406","line":12,"column":11,"nodeType":"327","messageId":"328","endLine":12,"endColumn":27},{"ruleId":"389","severity":1,"message":"390","line":13,"column":69,"nodeType":"391","messageId":"392","endLine":13,"endColumn":71},{"ruleId":"325","severity":1,"message":"407","line":16,"column":11,"nodeType":"327","messageId":"328","endLine":16,"endColumn":23},{"ruleId":"325","severity":1,"message":"408","line":3,"column":20,"nodeType":"327","messageId":"328","endLine":3,"endColumn":24},{"ruleId":"325","severity":1,"message":"409","line":3,"column":26,"nodeType":"327","messageId":"328","endLine":3,"endColumn":30},{"ruleId":"332","severity":1,"message":"410","line":29,"column":8,"nodeType":"334","endLine":29,"endColumn":10,"suggestions":"411"},{"ruleId":"325","severity":1,"message":"412","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":17},{"ruleId":"325","severity":1,"message":"413","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":16},{"ruleId":"325","severity":1,"message":"404","line":9,"column":5,"nodeType":"327","messageId":"328","endLine":9,"endColumn":14},{"ruleId":"325","severity":1,"message":"403","line":12,"column":5,"nodeType":"327","messageId":"328","endLine":12,"endColumn":15},{"ruleId":"325","severity":1,"message":"402","line":13,"column":5,"nodeType":"327","messageId":"328","endLine":13,"endColumn":16},{"ruleId":"325","severity":1,"message":"414","line":19,"column":12,"nodeType":"327","messageId":"328","endLine":19,"endColumn":19},{"ruleId":"325","severity":1,"message":"415","line":88,"column":15,"nodeType":"327","messageId":"328","endLine":88,"endColumn":32},{"ruleId":"389","severity":1,"message":"390","line":137,"column":19,"nodeType":"391","messageId":"392","endLine":137,"endColumn":21},{"ruleId":"322","severity":1,"message":"355","line":9,"column":1,"nodeType":"324","endLine":25,"endColumn":2},{"ruleId":"325","severity":1,"message":"401","line":5,"column":5,"nodeType":"327","messageId":"328","endLine":5,"endColumn":11},{"ruleId":"325","severity":1,"message":"409","line":5,"column":13,"nodeType":"327","messageId":"328","endLine":5,"endColumn":17},{"ruleId":"325","severity":1,"message":"402","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":16},{"ruleId":"332","severity":1,"message":"416","line":45,"column":8,"nodeType":"334","endLine":45,"endColumn":10,"suggestions":"417"},{"ruleId":"322","severity":1,"message":"355","line":5,"column":1,"nodeType":"324","endLine":16,"endColumn":2},{"ruleId":"322","severity":1,"message":"323","line":22,"column":1,"nodeType":"324","endLine":26,"endColumn":2},{"ruleId":"325","severity":1,"message":"385","line":2,"column":8,"nodeType":"327","messageId":"328","endLine":2,"endColumn":18},{"ruleId":"325","severity":1,"message":"418","line":6,"column":7,"nodeType":"327","messageId":"328","endLine":6,"endColumn":11},{"ruleId":"322","severity":1,"message":"323","line":27,"column":1,"nodeType":"324","endLine":30,"endColumn":2},{"ruleId":"325","severity":1,"message":"365","line":2,"column":8,"nodeType":"327","messageId":"328","endLine":2,"endColumn":14},{"ruleId":"332","severity":1,"message":"419","line":20,"column":8,"nodeType":"334","endLine":20,"endColumn":10,"suggestions":"420"},{"ruleId":"325","severity":1,"message":"421","line":2,"column":20,"nodeType":"327","messageId":"328","endLine":2,"endColumn":26},{"ruleId":"325","severity":1,"message":"409","line":2,"column":28,"nodeType":"327","messageId":"328","endLine":2,"endColumn":32},{"ruleId":"325","severity":1,"message":"422","line":2,"column":34,"nodeType":"327","messageId":"328","endLine":2,"endColumn":37},{"ruleId":"332","severity":1,"message":"423","line":19,"column":12,"nodeType":"334","endLine":19,"endColumn":14,"suggestions":"424"},{"ruleId":"332","severity":1,"message":"423","line":36,"column":12,"nodeType":"334","endLine":36,"endColumn":21,"suggestions":"425"},{"ruleId":"332","severity":1,"message":"419","line":45,"column":12,"nodeType":"334","endLine":45,"endColumn":18,"suggestions":"426"},{"ruleId":"332","severity":1,"message":"427","line":21,"column":8,"nodeType":"334","endLine":21,"endColumn":10,"suggestions":"428"},{"ruleId":"332","severity":1,"message":"427","line":26,"column":8,"nodeType":"334","endLine":26,"endColumn":17,"suggestions":"429"},{"ruleId":"332","severity":1,"message":"430","line":30,"column":8,"nodeType":"334","endLine":30,"endColumn":15,"suggestions":"431"},{"ruleId":"332","severity":1,"message":"432","line":48,"column":8,"nodeType":"334","endLine":48,"endColumn":31,"suggestions":"433"},{"ruleId":"332","severity":1,"message":"434","line":14,"column":8,"nodeType":"334","endLine":14,"endColumn":10,"suggestions":"435"},{"ruleId":"332","severity":1,"message":"434","line":18,"column":7,"nodeType":"334","endLine":18,"endColumn":14,"suggestions":"436"},{"ruleId":"332","severity":1,"message":"437","line":21,"column":8,"nodeType":"334","endLine":21,"endColumn":10,"suggestions":"438"},{"ruleId":"325","severity":1,"message":"439","line":5,"column":8,"nodeType":"327","messageId":"328","endLine":5,"endColumn":12},{"ruleId":"332","severity":1,"message":"440","line":27,"column":8,"nodeType":"334","endLine":27,"endColumn":10,"suggestions":"441"},{"ruleId":"332","severity":1,"message":"442","line":45,"column":8,"nodeType":"334","endLine":45,"endColumn":31,"suggestions":"443"},{"ruleId":"332","severity":1,"message":"444","line":50,"column":8,"nodeType":"334","endLine":50,"endColumn":17,"suggestions":"445"},{"ruleId":"332","severity":1,"message":"446","line":54,"column":8,"nodeType":"334","endLine":54,"endColumn":15,"suggestions":"447"},{"ruleId":"325","severity":1,"message":"401","line":3,"column":9,"nodeType":"327","messageId":"328","endLine":3,"endColumn":15},{"ruleId":"325","severity":1,"message":"383","line":5,"column":9,"nodeType":"327","messageId":"328","endLine":5,"endColumn":20},{"ruleId":"325","severity":1,"message":"448","line":12,"column":25,"nodeType":"327","messageId":"328","endLine":12,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":24,"column":8,"nodeType":"334","endLine":24,"endColumn":10,"suggestions":"449"},{"ruleId":"332","severity":1,"message":"333","line":36,"column":8,"nodeType":"334","endLine":36,"endColumn":21,"suggestions":"450"},{"ruleId":"337","replacedBy":"451"},{"ruleId":"339","replacedBy":"452"},{"ruleId":"325","severity":1,"message":"329","line":5,"column":8,"nodeType":"327","messageId":"328","endLine":5,"endColumn":19},{"ruleId":"325","severity":1,"message":"331","line":9,"column":11,"nodeType":"327","messageId":"328","endLine":9,"endColumn":15},{"ruleId":"325","severity":1,"message":"453","line":13,"column":12,"nodeType":"327","messageId":"328","endLine":13,"endColumn":19},{"ruleId":"325","severity":1,"message":"330","line":13,"column":21,"nodeType":"327","messageId":"328","endLine":13,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":22,"column":8,"nodeType":"334","endLine":22,"endColumn":10,"suggestions":"454"},{"ruleId":"332","severity":1,"message":"333","line":30,"column":8,"nodeType":"334","endLine":30,"endColumn":21,"suggestions":"455"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'LangService' is defined but never used.","'setContent' is assigned a value but never used.","'lang' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["456"],["457"],"no-native-reassign",["458"],"no-negated-in-lhs",["459"],["458"],["459"],"'Timer' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["460"],"'setMessage' is defined but never used.","'isValidated' is assigned a value but never used.","'setValidated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["461"],["458"],["459"],["458"],["459"],"Unexpected default export of anonymous function","'useRef' is defined but never used.","'Redirect' is defined but never used.","'loading' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'message' is assigned a value but never used.",["458"],["459"],["458"],["459"],"'Header' is defined but never used.","'BrowserRouter' is defined but never used.","'BoardUser' is defined but never used.","'logout' is defined but never used.","'showAdminBoard' is assigned a value but never used.","'setLang' is assigned a value but never used.",["458"],["459"],"'createTestShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.createTestShow'. Either include it or remove the dependency array. If 'setCreateTestShow' needs the current value of 'props.createTestShow', you can also switch to useReducer instead of useState and read 'props.createTestShow' in the reducer.",["462"],["458"],["459"],"'GET_AVAILABLE_TESTS_FAIL' is defined but never used.","'GET_AVAILABLE_TESTS_SUCCESS' is defined but never used.","React Hook useEffect contains a call to 'setTests'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.tests, props.testsModalShow, props.userToAddTests] as a second argument to the useEffect Hook.",["463"],"'_content' is assigned a value but never used.","'useSelector' is defined but never used.","'axios' is defined but never used.","'authHeader' is defined but never used.","'equals' is defined but never used.","'checkedAnswers' is assigned a value but never used.","'setCheckedAnswers' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'percentage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.match.params.testId' and 'user.id'. Either include them or remove the dependency array.",["464"],"'Button' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'ListGroup' is defined but never used.","'handleSubmitQuestion' is assigned a value but never used.","'handleSubmitTest' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Card' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array. If 'setTestId' needs the current value of 'props.match.params.id', you can also switch to useReducer instead of useState and read 'props.match.params.id' in the reducer.",["465"],"'ToggleButton' is defined but never used.","'ButtonGroup' is defined but never used.","'counter' is assigned a value but never used.","'handleSubmitChild' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lang'. Either include it or remove the dependency array.",["466"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["467"],"'Navbar' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array.",["468"],["469"],["470"],"React Hook useEffect has missing dependencies: 'currentPage' and 'param'. Either include them or remove the dependency array.",["471"],["472"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["473"],"React Hook useEffect has a missing dependency: 'param'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPages' needs the current value of 'param'.",["474"],"React Hook useEffect has a missing dependency: 'getTests'. Either include it or remove the dependency array.",["475"],["476"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["477"],"'Test' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'getTestsSorted', 'param', and 'sizePage'. Either include them or remove the dependency array.",["478"],"React Hook useEffect has missing dependencies: 'getTestsSorted' and 'param'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPages' needs the current value of 'param'.",["479"],"React Hook useEffect has missing dependencies: 'currentPage', 'getTestsSorted', and 'param'. Either include them or remove the dependency array.",["480"],"React Hook useEffect has missing dependencies: 'currentPage' and 'getTestsSorted'. Either include them or remove the dependency array.",["481"],"'setNeedRefresh' is assigned a value but never used.",["482"],["483"],["458"],["459"],"'content' is assigned a value but never used.",["484"],["485"],{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},"no-global-assign","no-unsafe-negation",{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"486","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"511","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"486","fix":"532"},{"desc":"488","fix":"533"},{"desc":"486","fix":"534"},{"desc":"488","fix":"535"},"Update the dependencies array to be: [props.match.params.id]",{"range":"536","text":"537"},"Update the dependencies array to be: [needRefresh, props.match.params.id]",{"range":"538","text":"539"},"Update the dependencies array to be: [user]",{"range":"540","text":"541"},"Update the dependencies array to be: [errorMessage, message, props.history, successful]",{"range":"542","text":"543"},"Update the dependencies array to be: [props.createTestShow]",{"range":"544","text":"545"},"Add dependencies array: [props.tests, props.testsModalShow, props.userToAddTests]",{"range":"546","text":"547"},"Update the dependencies array to be: [props.match.params.testId, user.id]",{"range":"548","text":"549"},{"range":"550","text":"537"},"Update the dependencies array to be: [lang]",{"range":"551","text":"552"},"Update the dependencies array to be: [props]",{"range":"553","text":"554"},"Update the dependencies array to be: [time]",{"range":"555","text":"556"},"Update the dependencies array to be: [seconds, time]",{"range":"557","text":"558"},"Update the dependencies array to be: [over, props]",{"range":"559","text":"560"},"Update the dependencies array to be: [currentPage, param]",{"range":"561","text":"562"},"Update the dependencies array to be: [currentPage, deleted, param]",{"range":"563","text":"564"},{"range":"565","text":"562"},"Update the dependencies array to be: [sizePage, currentPage, param]",{"range":"566","text":"567"},"Update the dependencies array to be: [getTests]",{"range":"568","text":"569"},"Update the dependencies array to be: [added, getTests]",{"range":"570","text":"571"},"Update the dependencies array to be: [getUser]",{"range":"572","text":"573"},"Update the dependencies array to be: [currentPage, getTestsSorted, param, sizePage]",{"range":"574","text":"575"},"Update the dependencies array to be: [sizePage, currentPage, getTestsSorted, param]",{"range":"576","text":"577"},"Update the dependencies array to be: [currentPage, deleted, getTestsSorted, param]",{"range":"578","text":"579"},"Update the dependencies array to be: [currentPage, getTestsSorted, param]",{"range":"580","text":"581"},{"range":"582","text":"537"},{"range":"583","text":"539"},{"range":"584","text":"537"},{"range":"585","text":"539"},[1212,1214],"[props.match.params.id]",[1959,1972],"[needRefresh, props.match.params.id]",[778,780],"[user]",[1463,1498],"[errorMessage, message, props.history, successful]",[325,327],"[props.createTestShow]",[534,534],", [props.tests, props.testsModalShow, props.userToAddTests]",[2813,2815],"[props.match.params.testId, user.id]",[886,888],[1006,1008],"[lang]",[503,505],"[props]",[526,528],"[time]",[979,988],"[seconds, time]",[1239,1245],"[over, props]",[602,604],"[currentPage, param]",[704,713],"[currentPage, deleted, param]",[785,792],[1358,1381],"[sizePage, currentPage, param]",[373,375],"[getTests]",[425,432],"[added, getTests]",[590,592],"[getUser]",[811,813],"[currentPage, getTestsSorted, param, sizePage]",[1383,1406],"[sizePage, currentPage, getTestsSorted, param]",[1510,1519],"[currentPage, deleted, getTestsSorted, param]",[1595,1602],"[currentPage, getTestsSorted, param]",[771,773],[1059,1072],[718,720],[913,926]]